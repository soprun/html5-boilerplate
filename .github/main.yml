# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: 'Setup node.js'
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 'Get npm cache directory'
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: 'Cache node_modules'
        uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 'Install dependencies'
        run: npm ci --ignore-scripts

      - name: 'Run test'
        run: npm test

      - name: 'Run lint'
        run: npm run lint

      - name: 'Run audit'
        run: npm run audit --production

      - name: 'Run build'
        run: npm run build --if-present

      - name: 'Run npm-check-updates'
        run: npm-check-updates --upgrade

