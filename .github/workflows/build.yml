# This is a basic workflow to help you get started with Actions

name: CI build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        env:
          NODE_ENV: development
        with:
          node-version: '14'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Get npm config get cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Setup npm cache node_modules
        uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run build
        run: npm run build --if-present

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          retention-days: 2
          name: build-dist
          path: |
            dist
            !dist/**/*.md

  test:
    name: Testing
    needs: build
    runs-on: ubuntu-latest
    if: ${{ success() }}
    continue-on-error: true
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Run lint
        run: npm run lint

      - name: Run test
        run: npm test

      - name: Run audit
        run: npm run audit --production

      - name: Run npm-check-updates
        run: npm-check-updates --upgrade

  stage:
    name: Deploy to stage
    needs: test
    if: ${{ success() }}
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{ steps.step_id.outputs.url_output }}
    steps:
      - run: echo "Deploying to stage server on branch ${GITHUB_REF}"

  prod:
    name: Deploy to production
    needs: stage
    if: ${{ success() }}
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.step_id.outputs.url_output }}
    steps:
      - run: echo "Deploying to production server on branch ${GITHUB_REF}"


#  - name: The job "run-lint" has failed
#    if: ${{ failure() }}
#    run: echo "on-failed on branch $GITHUB_REF"
#
#  - name: The job "run-lint" has success
#    if: ${{ success() }}
#    run: echo "on-success on branch $GITHUB_REF"
