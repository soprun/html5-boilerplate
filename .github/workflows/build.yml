# see: https://ru.werf.io/documentation/v1.2/advanced/ci_cd/github_actions.html#%D1%82%D1%80%D0%B5%D0%B1%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F

name: Continuous Integration

on: [ push , pull_request ]

#on:
#  push:
#    branches: [ develop ]
#  pull_request:
#    branches: [ develop ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup node.js
        uses: actions/setup-node@v2
        env:
          NODE_ENV: development
        with:
          node-version: '14'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Get npm config get cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Setup npm cache node_modules
        uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run lint
        continue-on-error: true
        run: npm run lint

      - name: Run test
        continue-on-error: true
        run: npm run test

      - name: Run audit
        continue-on-error: true
        run: npm audit --production

      - name: Run npm-check-updates
        continue-on-error: true
        run: npm-check-updates --upgrade

      - name: Run build
        run: npm run build --if-present

      - name: Uploading an archive of artifacts
        uses: actions/upload-artifact@v2
        with:
          retention-days: 2
          name: build-dist
          path: |
            dist
            !dist/**/*.md

  deploy-stag:
    needs: build
    if: ${{ github.ref == 'refs/heads/develop' }}
    name: Staging Deployment
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{ steps.step_id.outputs.url_output }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: echo "Deploying to stage server on branch ${GITHUB_REF}"

  deploy-prod:
    needs: [ build, deploy-stag ]
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Production Deployment
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.step_id.outputs.url_output }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: echo "Deploying to production server on branch $GITHUB_REF"
