# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

.default-steps: &default-steps
  # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  - uses: actions/checkout@v2

  - name: 'Setup node.js'
    uses: actions/setup-node@v2
    with:
      node-version: '14'
      check-latest: true
      cache: 'npm'
      cache-dependency-path: '**/package-lock.json'

  - name: 'Get npm cache directory'
    id: npm-cache-dir
    run: |
      echo "::set-output name=dir::$(npm config get cache)"

  - name: Cache node modules
    uses: actions/cache@v2
    id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
    with:
      path: ${{ steps.npm-cache-dir.outputs.dir }}
      key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      restore-keys: |
        ${{ runner.os }}-build-${{ env.cache-name }}-
        ${{ runner.os }}-build-
        ${{ runner.os }}-

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - *default-steps

      - name: Install Dependencies
        run: npm ci --ignore-scripts

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build --if-present

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          retention-days: 2
          name: build-dist
          path: |
            dist
            !dist/**/*.md

  test:
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: npm test

  on-success:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "on-success on branch $GITHUB_REF"

      - name: The job has succeeded
        if: ${{ success() }}

  on-failure:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "on-failure on branch $GITHUB_REF"
      - name: The job has failed
        if: ${{ failure() }}

  prod-check:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deploying to production server on branch $GITHUB_REF"


#      - name: Run audit
#        run: npm run audit --production
#
#      - name: Run npm-check-updates
#        run: npm-check-updates --upgrade
#
#    - name: Archive code coverage results
#      uses: actions/upload-artifact@v2
#      with:
#        name: code-coverage-report
#        path: output/test/code-coverage.html
