name: Continuous delivery

on:
#  pull_request:
#    branches:
#      - master
#      - develop
#    types:
#      - closed
  workflow_run:
    workflows: [ "Continuous integration" ]
    branches: [ master, develop ]
    types: [ completed ]

env:
  # Для примера сделал секреты глобальными... сейчас это не важно.
  # Здесь объявлены переменные окружения, нужные для работы приложения.

  # Пример: доступ к базе данных приложения.
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

  # Пример: учетная запись для общения с внешним API.
  BITRIX_API_KEY: ${{ secrets.BITRIX_API_KEY }}
  BITRIX_API_SECRET: ${{ secrets.BITRIX_API_SECRET }}

jobs:

  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - run: echo "on-success on branch $GITHUB_REF"

  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo "on-failure on branch $GITHUB_REF"

  stage:
    name: Staging deployment
    if: contains( github.ref, 'develop')
    # if: github.event.workflow_run.conclusion == 'success' && contains( github.ref, 'develop')
    # if: github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Downloading an archive production artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: rsync -avz . ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PATH }}

  prod:
    name: Production deployment
    # only merged pull requests must trigger this job
    if: contains( github.ref, 'master')
    # if: github.event.pull_request.merged == true && contains( github.ref, 'master')
    # if: github.event.workflow_run.conclusion == 'success' && contains( github.ref, 'master')
    # if: github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Downloading an archive production artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: rsync -avz . ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PATH }}
