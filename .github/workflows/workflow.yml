# see: https://ru.werf.io/documentation/v1.2/advanced/ci_cd/github_actions.html#%D1%82%D1%80%D0%B5%D0%B1%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F

name: Continuous Integration

on: [ push, pull_request ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup node.js
        uses: actions/setup-node@v2
        env:
          NODE_ENV: development
        with:
          node-version: '14'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Get npm config get cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Setup npm cache node_modules
        uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run lint
        continue-on-error: true
        run: npm run lint

      - name: Run test
        continue-on-error: true
        run: npm run test

      - name: Run audit
        continue-on-error: true
        run: npm audit --production

      - name: Run npm-check
        continue-on-error: true
        run: npm run npm-check

      - name: Run build in production mode
        # if: github.event.pull_request.merged == true
        run: npm run build --if-present

      - name: Uploading an archive production artifacts
        # if: github.event.pull_request.merged == true
        uses: actions/upload-artifact@v2
        with:
          retention-days: 2
          name: build-dist
          path: |
            dist
            !dist/**/*.md

  deploy-stag:
    needs: build
    # if: ${{ github.ref == 'refs/heads/develop' && github.event.pull_request.merged == true }}
    if: github.ref == 'refs/heads/develop'
    name: Staging Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: echo "Deploying to stage server on branch ${GITHUB_REF}"

  deploy-prod:
    needs: build
    # if: ${{ github.ref == 'refs/heads/master' && github.event.pull_request.merged == true }}
    if: github.ref == 'refs/heads/master'
    # if: ${{ github.event.inputs.tag != '' }} # don't release if no tag is specified
    name: Production Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment:
      name: production
    steps:
      - run: echo "Deploying to production server on branch $GITHUB_REF"

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Downloading an archive production artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Display structure of downloaded files
        run: ls -R ./dist/
